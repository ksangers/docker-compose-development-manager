#!/usr/bin/env bash
help() {
  attach() {
    echo "Start and attach to a service container its output"
    echo "Usage: $0 attach <container-name>"
  }
  check() {
    echo "Check whether the currently used template is up-to-date."
    echo "Usage: $0 check [-v]"
    echo "Options:"
    echo "  -v  Verbose output"
  }
  dc() {
    echo "Execute a Docker Compose command directly, using configured .env* files."
    echo "Usage: $0 dc [options...]"
  }
  down() {
    echo "Turn off development environment."
    echo "Usage: $0 down [options...]"
    echo "For more info, see: docker-compose help down"
  }
  exec() {
    echo "Execute a command on a running service container"
    echo "Usage: $0 exec <container> <command> [options...]"
    echo "Example: $0 exec redis redis-cli flushall"
    echo "For more info, see: docker-compose help exec"
  }
  init() {
    echo "Initialize a project type for development."
    echo "Usage: $0 init [-f|--force] <project-type>"
    echo "Available project types: "
    for type in "$(dirname "$(realpath "$0")")"/templates/*; do echo "- $(basename "$type")"; done
  }
  logs() {
    echo "Display container output logs."
    echo "Usage: $0 logs [-f] [service]"
    echo "For more info, see: docker-compose help logs"
  }
  ps() {
    echo "Display status of service containers"
    echo "Usage: $0 ps"
    echo "For more info, see: docker-compose help ps"
  }
  pull() {
    echo "Pull latest development environment images."
    echo "Usage: $0 pull"
    echo "For more info, see: docker-compose help pull"
  }
  rediscover() {
    echo "Checks whether cached locations still exist."
    echo "Usage: $0 rediscover"
  }
  restart() {
    echo "Restart the environment."
    echo "Usage: $0 restart"
  }
  restore() {
    echo "Restore previous running instances after shutdown."
    echo "Usage: $0 restore"
  }
  run() {
    echo "Run a command on a temporary service container."
    echo "Usage: $0 run <service> <command>"
    echo "For more info, see: docker-compose help run"
  }
  selfupdate() {
    echo "Run self update."
    echo "Usage: $0 selfupdate"
  }
  up() {
    echo "Turn on development environment."
    echo "Usage: $0 up [options...]"
    echo "For more info, see: docker-compose help up"
  }
  if [ "$(type -t "$1")" == "function" ]; then "$@"; else
    echo "Usage: $0 <option>"
    echo "The following options are available."
    echo
    echo "General management"
    echo "  build:   Build the services of the Docker Compose configuration"
    echo "  down:    Stop the environment"
    echo "  ps:      Display status of service containers"
    echo "  pull:    Pull latest images of service containers"
    echo "  restart: Restart the environment"
    echo "  up:      Start the environment"
    echo
    echo "Service container interaction"
    echo "  attach: Start and attach to a service container its output"
    echo "  exec:   Execute a command on a running service container"
    echo "  logs:   Display container output logs"
    echo "  run:    Run a command on a temporary service container"
    echo
    echo "Tool management"
    echo "  check:      Check if current template is up-to-date"
    echo "  init:       Initialize a project based on a template"
    echo "  restore:    Restore last development session"
    echo "  rediscover: Checks cached locations for non-existing environments."
    echo "  selfupdate: Run self update"
    echo
    echo "Additional options"
    echo "  dc: Execute a Docker Compose command"
    echo "  help: Display information about an option"
  fi
}

